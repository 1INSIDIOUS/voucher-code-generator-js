{
  "name": "Voucher-code-generator-js",
  "tagline": "",
  "body": "## Coupon Code Generator\r\n\r\nGenerate unique, hard to guess coupon, voucher codes.\r\n\r\nUse cases: promo codes, loyalty coupons, gift vouchers, in-app purchases\r\n\r\nThis library originates from [Voucherify](http://www.voucherify.io/?utm_source=github&utm_medium=opensource&utm_campaign=acq).\r\n\r\n### Installation\r\n\r\n#### In Node.js\r\n\r\nInstall with npm:\r\n\r\n```\r\n$ npm install --save voucher-code-generator\r\n```\r\n\r\nInclude with require:\r\n\r\n```\r\nvar voucher_codes = require('voucher-code-generator');\r\n```\r\n\r\n#### In a browser\r\n\r\n```\r\n<script src=\"voucher_codes.js\"></script>\r\n```\r\n\r\n### Usage\r\n\r\nGenerate 5 codes, each 8 characters long:\r\n```\r\nvoucher_codes.generate({\r\n    length: 8,\r\n    count: 5\r\n});\r\n```\r\n\r\nSample result: `[\"FR6bwx1q\", \"ByamOdWV\", \"7roFwfQs\", \"rmWlwvll\", \"pgih5eAB\"]`\r\n\r\n#### Charset\r\n\r\nDefault charset is alphanumeric (numbers and letters). However, you can specify your own charset:\r\n\r\n```\r\nvoucher_codes.generate({\r\n    length: 6,\r\n    count: 3,\r\n    charset: \"0123456789\"\r\n});\r\n```\r\n\r\nSample result: `[\"386525\", \"676442\", \"019075\"]`\r\n\r\nYou can also use one of the predefined charsets by calling `voucher_codes.charset(name)`.\r\n\r\n| name             | charset                                                            |\r\n|------------------|--------------------------------------------------------------------|\r\n| `\"numbers\"`      | `\"0123456789\"`                                                     |\r\n| `\"alphabetic\"`   | `\"abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"`           |\r\n| `\"alphanumeric\"` | `\"0123456789abcdefghijklmnopqrstuvwxyzABCDEFGHIJKLMNOPQRSTUVWXYZ\"` |\r\n\r\nFor example:\r\n\r\n```\r\nvoucher_codes.generate({\r\n    length: 5,\r\n    count: 4,\r\n    charset: voucher_codes.charset(\"alphabetic\")\r\n});\r\n```\r\n\r\nResult: `[\"odghy\", \"kZEYc\", \"eOTCl\", \"wVCzD\"]`\r\n\r\n#### Prefix and Postfix\r\n\r\nYou can optionally surround each generated code with a prefix and/or postfix.\r\n \r\nFor instance:\r\n```\r\nvoucher_codes.generate({\r\n    prefix: \"promo-\",\r\n    postfix: \"-2015\"\r\n});\r\n```\r\n\r\nResult: `[\"promo-WZ4x1t3U-2015\"]`\r\n\r\n#### Pattern\r\n\r\nCodes may follow a specified pattern. Use hash (`#`) as a placeholder for random characters. \r\nNotice that if `pattern` is specified then `length` is ignored.\r\n\r\nExample:\r\n\r\n```\r\nvoucher_codes.generate({\r\n    pattern: \"##-###-##\",\r\n});\r\n```\r\n\r\nResult: `[\"P7-ofW-Ka\"]`\r\n\r\n#### Config reference\r\n\r\n| attribute        | default value  | description                                                                     |\r\n|------------------|:--------------:|---------------------------------------------------------------------------------|\r\n| `length`         | `8`            | Number of characters in a generated code (excluding prefix and postfix)         |\r\n| `count`          | `1`            | Number of codes generated.                                                      |\r\n| `charset`        | `alphanumeric` | Characters that can appear in the code.                                         |\r\n| `prefix`         | `\"\"`           | A text appended before the code.                                                |\r\n| `postfix`        | `\"\"`           | A text appended after the code.                                                 |\r\n| `pattern`        | `\"########\"`   | A pattern for codes where hashes (`#`) will be replaced with random characters. |\r\n\r\n\r\n### Testing\r\n\r\nInstall dependencies:\r\n\r\n```\r\nnpm install\r\n```\r\n\r\nRun tests:\r\n\r\n```\r\nnpm run test\r\n```\r\n\r\n### License\r\n\r\nCode released under the [MIT license](LICENSE).\r\n",
  "google": "",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}